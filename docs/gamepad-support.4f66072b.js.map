{"version":3,"sources":["src/gamepad-support.ts"],"names":[],"mappings":";AAAA,aACA,IAAM,EAAc,EACd,EAAc,uBAAwB,OACtC,EAEF,GAGE,EAAc,CAClB,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,EACJ,EAAI,EACJ,EAAI,GAEA,EAAe,OAAO,OAAQ,GAC9B,EAAa,OAAO,KAAM,GAI1B,EAEA,CACN,CACE,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,IAEN,CACE,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,EAAI,KAEA,EAAsB,MAAO,GAAc,KAAK,CACpD,EAAI,KACJ,EAAI,KACJ,EAAI,KACJ,EAAI,KACJ,EAAI,KACJ,EAAI,KACJ,EAAI,OAGN,SAAS,EAAe,GACtB,QAAQ,IAAK,sBACb,QAAQ,IAAK,EAAE,SACf,EAAY,EAAE,SAGhB,SAAS,EAAW,GAClB,EAAY,EAAQ,OAAS,EAE7B,sBAAsB,GAGxB,SAAS,EAAkB,GACzB,EAAc,EAAE,SAGlB,SAAS,EAAc,UACd,EAAY,EAAQ,OAG7B,SAAS,IACF,GACH,IAIA,IAAA,IAAI,EAAgB,EACpB,EAAgB,OAAO,KAAK,GAAa,OACzC,IACA,CAEI,IAAA,EAAc,GAAa,OAAO,KAAK,GAAa,IAGnD,EAAW,QAAQ,IAAI,UACpB,SAAS,YACb,SACG,eAAgB,QAChB,qBAAsB,UAAW,GACjC,qBAIF,IAAA,IAAI,EAAI,EAAG,EAAI,EAAa,OAAQ,IAAK,CAEtC,IAAA,EAAY,EAAW,GAEvB,EADM,EAAW,QAAQ,EAAa,IACxB,QACd,EAAoB,EAAmB,GAAe,GAErD,GAAA,EAAU,CAET,IAAA,EAAU,EAAS,GAAe,GAIjC,GAAA,GAAqB,EAAkB,UAAY,EAAW,SAE/D,IAAA,EAAa,SAAS,YAAY,SAClC,EAAkB,SAAS,YAAY,SAC3C,EAAM,UAAU,WAAW,GAAM,GACjC,EAAW,UAAU,SAAS,GAAM,GACpC,EAAM,QAAU,EAChB,EAAW,QAAU,EACrB,SAAS,eAAgB,QAAS,cAAe,GAEjD,EAAmB,GAAe,GAAc,OAEtC,IACV,SAAS,eAAgB,QAAS,cAAe,GAEjD,EAAmB,GAAe,GAAa,OAKvD,sBAAsB,GAGxB,SAAS,IAEF,IADD,IAAA,EAAsB,UAAU,cAC3B,EAAI,EAAG,EAAI,EAAS,OAAQ,IAC/B,EAAS,KACP,EAAS,GAAG,SAAS,EACvB,EAAY,EAAS,GAAG,OAAS,EAAS,GAE1C,EAAW,EAAS,KAO5B,OAAO,iBAAiB,mBAAoB,GAC5C,OAAO,iBAAiB,sBAAuB,GAE1C,GAAY","file":"gamepad-support.4f66072b.js","sourceRoot":"../src/games/super-mario-land","sourcesContent":["// Gamepad support\nconst MAX_PLAYERS = 2;\nconst haveEvents  = 'ongamepadconnected' in window;\nconst controllers: {\n  [property: number]: Gamepad\n} = {};\n// D-PAD AND BUTTONS\n// (U, D, L, R, B, A, START)\nconst buttons     = {\n  U : 12,\n  D : 13,\n  L : 14,\n  R : 15,\n  B : 2,\n  A : 0,\n  S : 9\n};\nconst buttonValues = Object.values( buttons );\nconst buttonKeys = Object.keys( buttons );\n// KeyboardEvent keyCode mappings by gamepad\n// i.e. - keyCodes[0] maps to the first gamepad,\n// pressing (S)TART triggers a keypress for 83 (SPACE)\nconst keyCodes: {\n  [property: string]: number\n}[] = [\n{\n  U : 38,\n  D : 40,\n  L : 37,\n  R : 39,\n  B : 67,\n  A : 32,\n  S : 83\n},\n{\n  U : 87,\n  D : 83,\n  L : 65,\n  R : 68\n}];\nconst pendingKeyupEvents  = Array( MAX_PLAYERS ).fill({\n  U : null,\n  D : null,\n  L : null,\n  R : null,\n  B : null,\n  A : null,\n  S : null\n});\n\nfunction connecthandler(e: GamepadEvent) {\n  console.log( '.. adding gamepad:' );\n  console.log( e.gamepad );\n  addgamepad( e.gamepad );\n}\n\nfunction addgamepad(gamepad: Gamepad) {\n  controllers[gamepad.index] = gamepad;\n\n  requestAnimationFrame(updateStatus);\n}\n\nfunction disconnecthandler(e: GamepadEvent) {\n  removegamepad(e.gamepad);\n}\n\nfunction removegamepad(gamepad: Gamepad) {\n  delete controllers[gamepad.index];\n}\n\nfunction updateStatus() {\n  if (!haveEvents) {\n    scangamepads();\n  }\n\n  for (\n    let controllerIdx = 0; \n    controllerIdx < Object.keys(controllers).length; \n    controllerIdx++\n  ) {\n\n    var controller  = controllers[+Object.keys(controllers)[controllerIdx]];\n\n    // HOME / PS button - enter fullscreen\n    if ( controller.buttons[16].pressed ) {\n      if ( !document.fullscreen ) {\n        document\n          .getElementById( 'game' )\n          .getElementsByTagName( 'canvas' )[0]\n          .requestFullscreen();\n      }      \n    }\n\n    for (let i = 0; i < buttonValues.length; i++) {\n\n        let buttonKey = buttonKeys[i];\n        var val = controller.buttons[buttonValues[i]];\n        var pressed = val.pressed;\n        let pendingKeyupEvent = pendingKeyupEvents[controllerIdx][buttonKey];\n\n        if ( pressed ) {\n\n          let keyCode = keyCodes[controllerIdx][buttonKey];\n\n          // if button is still pressed (pendingKeyupEvent),\n          // don't create / dispatch duplicate events\n          if ( pendingKeyupEvent && pendingKeyupEvent.keyCode === keyCode )  continue;\n\n          var event: any = document.createEvent('event');\n          let keyupEvent: any = document.createEvent('event');\n          event.initEvent('keydown', true, true);\n          keyupEvent.initEvent('keyup', true, true);\n          event.keyCode = keyCode;\n          keyupEvent.keyCode = keyCode;\n          document.getElementById( 'game' ).dispatchEvent( event );\n\n          pendingKeyupEvents[controllerIdx][buttonKey]  = keyupEvent;\n\n        } else if ( pendingKeyupEvent ) {\n          document.getElementById( 'game' ).dispatchEvent( pendingKeyupEvent );\n          \n          pendingKeyupEvents[controllerIdx][buttonKey] = null;\n        }\n    }\n  }\n\n  requestAnimationFrame(updateStatus);\n}\n\nfunction scangamepads() {\n  var gamepads: Gamepad[] = navigator.getGamepads();\n  for (var i = 0; i < gamepads.length; i++) {\n    if (gamepads[i]) {\n      if (gamepads[i].index in controllers) {\n        controllers[gamepads[i].index] = gamepads[i];\n      } else {\n        addgamepad(gamepads[i]);\n      }\n    }\n  }\n}\n\n\nwindow.addEventListener(\"gamepadconnected\", connecthandler);\nwindow.addEventListener(\"gamepaddisconnected\", disconnecthandler);\n\nif (!haveEvents) scangamepads();"]}